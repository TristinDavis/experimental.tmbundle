{
    name = "HTML (XHTML Strict 1.1)"; 
    scopeName = "text.html.xhtml.strict.1-1"; 
    foldingStartMarker = "(<(?i:(head|table|thead|tbody|tfoot|tr|div|fieldset|style|script|ul|ol|form|dl))\\b.*?>|\\{\\{?(if|foreach|capture|literal|foreach|php|section|strip)|\\{\\s*$)"; 
    foldingStopMarker = "(</(?i:(head|table|tr|div|fieldset|style|script|ul|ol|form|dl))>|\\{\\{?/(if|foreach|capture|literal|foreach|php|section|strip)|(^|\\s)\\})"; 
    patterns = (
        { include = "#xml-preprocessor"; },
        { include = "#sgml-declarations-preprocessor"; },
        { include = "#tag-html"; },
        { include = "#stray-char"; },
    ); 
    repository = {
        "xml-preprocessor" = {
            name = "meta.tag.preprocessor.xml.html"; 
            begin = "<\\?([\\w-]*)"; 
            end = "\\?>"; 
            captures = { 1 = { name = "entity.name.tag.xml.html"; }; };
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    match = "([\\w-]*)=((\".*?\")|(\'.*?\')|((\\?(?!>)|[^\"\'>\\s\\?])+))";
                    captures = {
                        1 = { name = "entity.other.attribute-name.html"; };
                        3 = { name = "string.quoted.double.html"; };
                        4 = { name = "string.quoted.single.html"; };
                        5 = { name = "string.unquoted.html"; };
                    };
                },
            ); 
        }; 
        "sgml-declarations-preprocessor" = {
            begin = "(?=<!)"; 
            end = "(?<=>)"; 
            patterns = (
                {   name = "meta.tag.sgml-declaration.doctype.html";
                    begin = "<!(DOCTYPE\\b)"; 
                    end = ">"; 
                    captures = { 1 = { name = "entity.name.tag.doctype.html"; }; };
                    patterns = (
                        {
                            match = "\"[^\">]*\""; 
                            name = "string.quoted.double.doctype.identifiers-and-DTDs.html"; 
                        }
                    ); 
                },
                { include = "#sgml-declarations"; },
            ); 
        }; 
        "sgml-declarations" = {
            begin = "(?=<!)"; 
            end = "(?<=>)"; 
            patterns = (
                {   name = "meta.tag.sgml.empty.html";
                    match = "<!\\s*>";
                }, 
                {   name = "invalid.illegal.bad-comments-or-CDATA.html";
                    begin = "<!(?!DOCTYPE|--|\\[CDATA\\[)";
                    end = ">";
                }, 
                {   name = "meta.tag.preprocessor.server-side-includes.html";
                    begin = "<!--(#\\s*(include|config|echo|exec|fsize|flastmod|printenv|set))"; 
                    end = "-->"; 
                    captures = {
                        1 = { name = "support.function.server-side-include.html"; };
                    };
                    patterns = (
                        {   name = "other.preprocessor.server-side-includes.html"; 
                            match = "(errmsg|sizefmt|timefmt|var|encoding|cgi|cmd|file|virtual|value)=((\".*?\")|(\'.*?\')|([^\"\'>\\s]+))";
                            captures = {
                                1 = { name = "entity.other.attribute-name.html"; };
                                3 = { name = "string.quoted.double.html"; };
                                4 = { name = "string.quoted.single.html"; };
                                5 = { name = "string.unquoted.html"; };
                            };
                        }
                    ); 
                },
                { include = "#sgml-comment"; },
                {   name = "meta.scope.xml-cdata.html";
                    begin = "<!\\[CDATA\\["; 
                    end = "]]>"; 
                },
            ); 
        }; 
        "sgml-comment" = {
            name = "comment.block.html";
            comment = "Does not allow the closing bracket to be on a diff line that the --, which as far as I can tell is legal.";
            begin = "<!--"; 
            end = "--\\s*>"; 
            patterns = (
                {   name = "invalid.deprecated.bad-comment-ending-token.html";
                    match = "--(?!\\s*>)"; 
                }
            ); 
        }; 
        "tag-a" = {
            begin = "(<(a)\\b)";
            end = "((a)>)";
            captures = {
                1 = { name = "meta.tag.block.a.html.strict"; };
                2 = { name = "entity.name.tag.block.a.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=a))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.a.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline-no_a"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.a.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-accesskey"; },
                        { include = "#attribute-charset"; },
                        { include = "#attribute-href"; },
                        { include = "#attribute-hreflang"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attribute-rel"; },
                        { include = "#attribute-rev"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attribute-target"; },
                        { include = "#attribute-type"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-abbr" = {
            begin = "(<(abbr)\\b)";
            end = "((abbr)>)";
            captures = {
                1 = { name = "meta.tag.block.abbr.html.strict"; };
                2 = { name = "entity.name.tag.block.abbr.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=abbr))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.abbr.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.abbr.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-acronym" = {
            begin = "(<(acronym)\\b)";
            end = "((acronym)>)";
            captures = {
                1 = { name = "meta.tag.block.acronym.html.strict"; };
                2 = { name = "entity.name.tag.block.acronym.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=acronym))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.acronym.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.acronym.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-address" = {
            begin = "(<(address)\\b)";
            end = "((address)>)";
            captures = {
                1 = { name = "meta.tag.block.address.html.strict"; };
                2 = { name = "entity.name.tag.block.address.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=address))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.address.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.address.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-area" = {
            begin = "(<(area)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.area.html.strict"; };
                2 = { name = "entity.name.tag.inline.area.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.area.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.area.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-accesskey"; },
                        { include = "#attribute-alt"; },
                        { include = "#attribute-coords"; },
                        { include = "#attribute-href"; },
                        { include = "#attribute-nohref"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attribute-shape"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attribute-target"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-b" = {
            begin = "(<(b)\\b)";
            end = "((b)>)";
            captures = {
                1 = { name = "meta.tag.block.b.html.strict"; };
                2 = { name = "entity.name.tag.block.b.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=b))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.b.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.b.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-base" = {
            begin = "(<(base)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.base.html.strict"; };
                2 = { name = "entity.name.tag.inline.base.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.base.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.base.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-target"; },
                        { include = "#attribute-href"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-bdo" = {
            begin = "(<(bdo)\\b)";
            end = "((bdo)>)";
            captures = {
                1 = { name = "meta.tag.block.bdo.html.strict"; };
                2 = { name = "entity.name.tag.block.bdo.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=bdo))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.bdo.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.bdo.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-dir"; },
                        { include = "#attributes-group-core"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-big" = {
            begin = "(<(big)\\b)";
            end = "((big)>)";
            captures = {
                1 = { name = "meta.tag.block.big.html.strict"; };
                2 = { name = "entity.name.tag.block.big.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=big))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.big.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.big.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-blockquote" = {
            begin = "(<(blockquote)\\b)";
            end = "((blockquote)>)";
            captures = {
                1 = { name = "meta.tag.block.blockquote.html.strict"; };
                2 = { name = "entity.name.tag.block.blockquote.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=blockquote))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.blockquote.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-heading"; },
                        { include = "#tag-group-block"; },
                        { include = "#tag-group-list"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.blockquote.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-cite"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-body" = {
            begin = "(<(body)\\b)";
            end = "((body)>)";
            captures = {
                1 = { name = "meta.tag.block.body.html.strict"; };
                2 = { name = "entity.name.tag.block.body.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=body))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.body.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-heading"; },
                        { include = "#tag-group-block"; },
                        { include = "#tag-group-list"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.body.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-onload"; },
                        { include = "#attribute-onunload"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-br" = {
            begin = "(<(br)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.br.html.strict"; };
                2 = { name = "entity.name.tag.inline.br.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.br.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.br.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attributes-group-core"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-button" = {
            begin = "(<(button)\\b)";
            end = "((/>)|((button)>))";
            captures = {
                1 = { name = "meta.tag.block.button.html.strict"; };
                4 = { name = "entity.name.tag.block.button.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=button))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.button.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-heading"; },
                        { include = "#tag-group-list"; },
                        { include = "#tag-group-block-no_form"; },
                        { include = "#tag-group-inline-no_formctrl"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.button.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-accesskey"; },
                        { include = "#attribute-disabled"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attribute-type-button"; },
                        { include = "#attribute-value"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-caption" = {
            begin = "(<(caption)\\b)";
            end = "((caption)>)";
            captures = {
                1 = { name = "meta.tag.block.caption.html.strict"; };
                2 = { name = "entity.name.tag.block.caption.html.strict"; };
            };
            patterns = (
                {
                    name = "test";
                    begin = "(?<=>)";
                    end = "(</(?=caption))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.caption.html.strict"; };
                        2 = { name = "entity.name.tag.block.caption.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.caption.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-cite" = {
            begin = "(<(cite)\\b)";
            end = "((cite)>)";
            captures = {
                1 = { name = "meta.tag.block.cite.html.strict"; };
                2 = { name = "entity.name.tag.block.cite.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=cite))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.cite.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.cite.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-code" = {
            begin = "(<(code)\\b)";
            end = "((code)>)";
            captures = {
                1 = { name = "meta.tag.block.code.html.strict"; };
                2 = { name = "entity.name.tag.block.code.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=code))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.code.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.code.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-col" = {
            begin = "(<(col)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.col.html.strict"; };
                2 = { name = "entity.name.tag.inline.col.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.col.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.col.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-align"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-span"; },
                        { include = "#attribute-valign"; },
                        { include = "#attribute-width-multi"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-colgroup" = {
            begin = "(<(colgroup)\\b)";
            end = "((/>)|((colgroup)>))";
            captures = {
                1 = { name = "meta.tag.block.colgroup.html.strict"; };
                4 = { name = "entity.name.tag.block.colgroup.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=colgroup))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.colgroup.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-col"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.colgroup.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-align"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-span"; },
                        { include = "#attribute-valign"; },
                        { include = "#attribute-width-multi"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-dd" = {
            begin = "(<(dd)\\b)";
            end = "((dd)>)";
            captures = {
                1 = { name = "meta.tag.block.dd.html.strict"; };
                2 = { name = "entity.name.tag.block.dd.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=dd))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.dd.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.dd.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-del" = {
            begin = "(<(del)\\b)";
            end = "((del)>)";
            captures = {
                1 = { name = "meta.tag.block.del.html.strict"; };
                2 = { name = "entity.name.tag.block.del.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=del))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.del.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.del.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-cite"; },
                        { include = "#attribute-datetime"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-dfn" = {
            begin = "(<(dfn)\\b)";
            end = "((dfn)>)";
            captures = {
                1 = { name = "meta.tag.block.dfn.html.strict"; };
                2 = { name = "entity.name.tag.block.dfn.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=dfn))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.dfn.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.dfn.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-div" = {
            begin = "(<(div)\\b)";
            end = "((div)>)";
            captures = {
                1 = { name = "meta.tag.block.div.html.strict"; };
                2 = { name = "entity.name.tag.block.div.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=div))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.div.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.div.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-dl" = {
            begin = "(<(dl)\\b)";
            end = "((dl)>)";
            captures = {
                1 = { name = "meta.tag.block.dl.html.strict"; };
                2 = { name = "entity.name.tag.block.dl.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=dl))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.dl.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-dt"; },
                        { include = "#tag-dd"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.dl.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-dt" = {
            begin = "(<(dt)\\b)";
            end = "((dt)>)";
            captures = {
                1 = { name = "meta.tag.block.dt.html.strict"; };
                2 = { name = "entity.name.tag.block.dt.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=dt))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.dt.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.dt.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-em" = {
            begin = "(<(em)\\b)";
            end = "((em)>)";
            captures = {
                1 = { name = "meta.tag.block.em.html.strict"; };
                2 = { name = "entity.name.tag.block.em.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=em))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.em.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.em.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-fieldset" = {
            begin = "(<(fieldset)\\b)";
            end = "((fieldset)>)";
            captures = {
                1 = { name = "meta.tag.block.fieldset.html.strict"; };
                2 = { name = "entity.name.tag.block.fieldset.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=fieldset))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.fieldset.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-legend"; },
                        { include = "#tag-group-flow"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.fieldset.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-form" = {
            begin = "(<(form)\\b)";
            end = "((form)>)";
            captures = {
                1 = { name = "meta.tag.block.form.html.strict"; };
                2 = { name = "entity.name.tag.block.form.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=form))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.form.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-fieldset"; },
                        { include = "#tag-group-heading"; },
                        { include = "#tag-group-list"; },
                        { include = "#tag-group-block-no_form"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.form.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-accept"; },
                        { include = "#attribute-accept-charset"; },
                        { include = "#attribute-action"; },
                        { include = "#attribute-method"; },
                        { include = "#attribute-onreset"; },
                        { include = "#attribute-onsubmit"; },
                        { include = "#attribute-target"; },
                        { include = "#attribute-enctype"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-h1" = {
            begin = "(<(h1)\\b)";
            end = "((h1)>)";
            captures = {
                1 = { name = "meta.tag.block.h1.html.strict"; };
                2 = { name = "entity.name.tag.block.h1.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=h1))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.h1.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.h1.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-h2" = {
            begin = "(<(h2)\\b)";
            end = "((h2)>)";
            captures = {
                1 = { name = "meta.tag.block.h2.html.strict"; };
                2 = { name = "entity.name.tag.block.h2.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=h2))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.h2.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.h2.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-h3" = {
            begin = "(<(h3)\\b)";
            end = "((h3)>)";
            captures = {
                1 = { name = "meta.tag.block.h3.html.strict"; };
                2 = { name = "entity.name.tag.block.h3.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=h3))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.h3.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.h3.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-h4" = {
            begin = "(<(h4)\\b)";
            end = "((h4)>)";
            captures = {
                1 = { name = "meta.tag.block.h4.html.strict"; };
                2 = { name = "entity.name.tag.block.h4.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=h4))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.h4.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.h4.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-h5" = {
            begin = "(<(h5)\\b)";
            end = "((h5)>)";
            captures = {
                1 = { name = "meta.tag.block.h5.html.strict"; };
                2 = { name = "entity.name.tag.block.h5.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=h5))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.h5.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.h5.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-h6" = {
            begin = "(<(h6)\\b)";
            end = "((h6)>)";
            captures = {
                1 = { name = "meta.tag.block.h6.html.strict"; };
                2 = { name = "entity.name.tag.block.h6.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=h6))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.h6.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.h6.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-head" = {
            begin = "(<(head)\\b)";
            end = "((head)>)";
            captures = {
                1 = { name = "meta.tag.block.head.html.strict"; };
                2 = { name = "entity.name.tag.block.head.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=head))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.head.html.strict"; };
                    };
                    patterns = (
                        { include = "#sgml-declarations"; },
                        { include = "#tag-title"; },
                        { include = "#tag-base"; },
                        { include = "#tag-meta"; },
                        { include = "#tag-link"; },
                        { include = "#tag-object-inheader"; },
                        { include = "#tag-script"; },
                        { include = "#tag-style"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.head.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-profile"; },
                        { include = "#attributes-group-I18n"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-hr" = {
            begin = "(<(hr)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.hr.html.strict"; };
                2 = { name = "entity.name.tag.inline.hr.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.hr.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.hr.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-html" = {
            begin = "(<(html)\\b)";
            end = "((html)>)";
            captures = {
                1 = { name = "meta.tag.block.html.html.strict"; };
                2 = { name = "entity.name.tag.block.html.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=html))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.html.html.strict"; };
                    };
                    patterns = (
                        { include = "#sgml-declarations"; },
                        { include = "#tag-head"; },
                        { include = "#tag-body"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.html.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        {   name = "meta.attribute-with-value.html.strict";
                            begin = "(version)=(?=([\"']).*?[\"'])";
                            end = "";
                            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                            patterns = (
                                {   name = "string.quoted.double";
                                    begin = "\"";
                                    end = "\"";
                                    patterns = (
                                        { match = "(?<=\"|')-//W3C//DTD XHTML 1\\.1//EN(?=\"|')"; },
                                        { include = "#values-generic-invalid"; },
                                    ); 
                                },
                                {   name = "string.quoted.single";
                                    begin = "'";
                                    end = "'";
                                    patterns = (
                                        { match = "(?<=\"|')-//W3C//DTD XHTML 1\\.1//EN(?=\"|')"; },
                                        { include = "#values-generic-invalid"; },
                                    ); 
                                },
                            ); 
                        },
                        { include = "#attributes-group-I18n"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-i" = {
            begin = "(<(i)\\b)";
            end = "((i)>)";
            captures = {
                1 = { name = "meta.tag.block.i.html.strict"; };
                2 = { name = "entity.name.tag.block.i.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=i))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.i.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.i.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-iframe" = {
            begin = "(<(iframe)\\b)";
            end = "((iframe)>)";
            captures = {
                1 = { name = "meta.tag.block.iframe.html.strict"; };
                2 = { name = "entity.name.tag.block.iframe.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=iframe))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.iframe.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.iframe.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-frameborder"; },
                        { include = "#attribute-height"; },
                        { include = "#attribute-longdesc"; },
                        { include = "#attribute-marginheight"; },
                        { include = "#attribute-marginwidth"; },
                        { include = "#attribute-scrolling"; },
                        { include = "#attribute-src"; },
                        { include = "#attribute-width"; },
                        { include = "#attributes-group-core"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-img" = {
            begin = "(<(img)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.img.html.strict"; };
                2 = { name = "entity.name.tag.inline.img.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.img.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.img.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-alt"; },
                        { include = "#attribute-height"; },
                        { include = "#attribute-ismap"; },
                        { include = "#attribute-longdesc"; },
                        { include = "#attribute-src"; },
                        { include = "#attribute-width"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-input" = {
            begin = "(<(input)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.input.html.strict"; };
                2 = { name = "entity.name.tag.inline.input.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.input.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.input.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-accept"; },
                        { include = "#attribute-accesskey"; },
                        { include = "#attribute-alt"; },
                        { include = "#attribute-checked"; },
                        { include = "#attribute-disabled"; },
                        { include = "#attribute-maxlength"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attribute-onchange"; },
                        { include = "#attribute-onselect"; },
                        { include = "#attribute-readonly"; },
                        { include = "#attribute-size"; },
                        { include = "#attribute-src"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attribute-type-input"; },
                        { include = "#attribute-value"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-ins" = {
            begin = "(<(ins)\\b)";
            end = "((ins)>)";
            captures = {
                1 = { name = "meta.tag.block.ins.html.strict"; };
                2 = { name = "entity.name.tag.block.ins.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=ins))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.ins.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.ins.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-cite"; },
                        { include = "#attribute-datetime"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-kbd" = {
            begin = "(<(kbd)\\b)";
            end = "((kbd)>)";
            captures = {
                1 = { name = "meta.tag.block.kbd.html.strict"; };
                2 = { name = "entity.name.tag.block.kbd.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=kbd))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.kbd.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.kbd.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-label" = {
            begin = "(<(label)\\b)";
            end = "((label)>)";
            captures = {
                1 = { name = "meta.tag.block.label.html.strict"; };
                2 = { name = "entity.name.tag.block.label.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=label))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.label.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline-no_label"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.label.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-accesskey"; },
                        { include = "#attribute-for"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-legend" = {
            begin = "(<(legend)\\b)";
            end = "((legend)>)";
            captures = {
                1 = { name = "meta.tag.block.legend.html.strict"; };
                2 = { name = "entity.name.tag.block.legend.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=legend))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.legend.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.legend.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-accesskey"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-li" = {
            begin = "(<(li)\\b)";
            end = "((li)>)";
            captures = {
                1 = { name = "meta.tag.block.li.html.strict"; };
                2 = { name = "entity.name.tag.block.li.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=li))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.li.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.li.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-link" = {
            begin = "(<(link)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.link.html.strict"; };
                2 = { name = "entity.name.tag.inline.link.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.link.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.link.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-charset"; },
                        { include = "#attribute-href"; },
                        { include = "#attribute-hreflang"; },
                        { include = "#attribute-media"; },
                        { include = "#attribute-rel"; },
                        { include = "#attribute-rev"; },
                        { include = "#attribute-target"; },
                        { include = "#attribute-type"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-map" = {
            begin = "(<(map)\\b)";
            end = "((map)>)";
            captures = {
                1 = { name = "meta.tag.block.map.html.strict"; };
                2 = { name = "entity.name.tag.block.map.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=map))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.map.html.strict"; };
                    };
                    patterns = (
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                        {   begin = "(?=<area)";
                            end = "(?=</map)";
                            patterns = (
                                { include = "#tag-area"; },
                                { include = "#stray-char"; },
                                { include = "#sgml-declarations"; },
                            );
                        },
                        {   begin = "(?=<(?!/?(map|area)))";
                            end = "(?=</map)";
                            patterns = (
                                { include = "#tag-group-heading"; },
                                { include = "#tag-group-block"; },
                                { include = "#stray-char"; },
                                { include = "#sgml-declarations"; },
                            );
                        },
                    );
                },
                {   name = "meta.tag.block.map.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-class"; },
                        { include = "#attribute-id"; },
                        { include = "#attribute-title"; },
                        { include = "#attributes-group-events"; },
                        { include = "#attributes-group-I18n"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-meta" = {
            begin = "(<(meta)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.meta.html.strict"; };
                2 = { name = "entity.name.tag.inline.meta.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.meta.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.meta.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-content"; },
                        { include = "#attribute-http-equiv"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-scheme"; },
                        { include = "#attributes-group-I18n"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-noscript" = {
            begin = "(<(noscript)\\b)";
            end = "((noscript)>)";
            captures = {
                1 = { name = "meta.tag.block.noscript.html.strict"; };
                2 = { name = "entity.name.tag.block.noscript.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=noscript))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.noscript.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-heading"; },
                        { include = "#tag-group-list"; },
                        { include = "#tag-group-block"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.noscript.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-object" = {
            begin = "(<(object)\\b)";
            end = "((/>)|((object)>))";
            captures = {
                1 = { name = "meta.tag.inline.object.html.strict"; };
                4 = { name = "entity.name.tag.inline.object.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=object))";
                    endCaptures = {
                        1 = { name = "meta.tag.inline.object.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-param"; },
                        { include = "#tag-param"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.inline.object.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-classid"; },
                        { include = "#attribute-codebase"; },
                        { include = "#attribute-codetype"; },
                        { include = "#attribute-data"; },
                        { include = "#attribute-declare"; },
                        { include = "#attribute-height"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-standby"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attribute-type"; },
                        { include = "#attribute-width"; },
                        { include = "#attribute-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-object-inheader" = {
            begin = "(<(object)\\b)";
            end = "((/>)|((object)>))";
            captures = {
                1 = { name = "meta.tag.inline.object.html.strict"; };
                4 = { name = "entity.name.tag.inline.object.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=object))";
                    endCaptures = {
                        1 = { name = "meta.tag.inline.object.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-param"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.inline.object.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-classid"; },
                        { include = "#attribute-codebase"; },
                        { include = "#attribute-codetype"; },
                        { include = "#attribute-data"; },
                        { include = "#attribute-declare"; },
                        { include = "#attribute-height"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-standby"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attribute-type"; },
                        { include = "#attribute-width"; },
                        { include = "#attribute-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-ol" = {
            begin = "(<(ol)\\b)";
            end = "((ol)>)";
            captures = {
                1 = { name = "meta.tag.block.ol.html.strict"; };
                2 = { name = "entity.name.tag.block.ol.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=ol))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.ol.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-li"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.ol.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-optgroup" = {
            begin = "(<(optgroup)\\b)";
            end = "((optgroup)>)";
            captures = {
                1 = { name = "meta.tag.block.optgroup.html.strict"; };
                2 = { name = "entity.name.tag.block.optgroup.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=optgroup))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.optgroup.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-option"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.optgroup.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-disabled"; },
                        { include = "#attribute-label"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-option" = {
            begin = "(<(option)\\b)";
            end = "((/>)|((option)>))";
            captures = {
                1 = { name = "meta.tag.block.option.html.strict"; };
                4 = { name = "entity.name.tag.block.option.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=option))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.option.html.strict"; };
                    };
                    patterns = (
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.option.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-disabled"; },
                        { include = "#attribute-label"; },
                        { include = "#attribute-selected"; },
                        { include = "#attribute-value"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-p" = {
            begin = "(<(p)\\b)";
            end = "((p)>)";
            captures = {
                1 = { name = "meta.tag.block.p.html.strict"; };
                2 = { name = "entity.name.tag.block.p.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=p))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.p.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.p.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-pre" = {
            begin = "(<(pre)\\b)";
            end = "((pre)>)";
            captures = {
                1 = { name = "meta.tag.block.pre.html.strict"; };
                2 = { name = "entity.name.tag.block.pre.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=pre))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.pre.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.pre.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-xml:space"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-param" = {
            begin = "(<(param)\\b)";
            end = "(/>|(>))";
            beginCaptures = {
                1 = { name = "meta.tag.inline.param.html.strict"; };
                2 = { name = "entity.name.tag.inline.param.html.strict"; };
            };
            endCaptures = {
                1 = { name = "meta.tag.inline.param.html.strict"; };
                2 = { name = "invalid.illegal.terminator.html"; };
            };
            patterns = (
                {   name = "meta.tag.inline.param.html.strict";
                    begin = "";
                    end = "(?=/>|>)";
                    patterns = (
                        { include = "#attribute-id"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-type"; },
                        { include = "#attribute-value"; },
                        { include = "#attribute-valuetype"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-q" = {
            begin = "(<(q)\\b)";
            end = "((q)>)";
            captures = {
                1 = { name = "meta.tag.block.q.html.strict"; };
                2 = { name = "entity.name.tag.block.q.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=q))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.q.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.q.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-cite"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-samp" = {
            begin = "(<(samp)\\b)";
            end = "((samp)>)";
            captures = {
                1 = { name = "meta.tag.block.samp.html.strict"; };
                2 = { name = "entity.name.tag.block.samp.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=samp))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.samp.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.samp.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-script" = {
            comment = "Bug: Invalid chars are sometimes picked up by the js syntax first.";
            begin = "(<(script)\\b)";
            end = "((/>)|((script)>))";
            captures = {
                1 = { name = "meta.tag.inline.script.html.strict"; };
                4 = { name = "entity.name.tag.inline.script.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=script))";
                    endCaptures = {
                        1 = { name = "meta.tag.inline.script.html.strict"; };
                    };
                    contentName = "source.js.embedded.html.strict";
                    patterns = (
                        { include = "#sgml-comment"; },
                        {   name = "meta.scope.xml-cdata.html";
                            begin = "<!\\[CDATA\\["; 
                            end = "]]>"; 
                            patterns = (
                                { include = "source.js"; },
                            );
                        },
                        {   name = "invalid.illegal.char_not_allowed";
                            match = "<|>|]]>|--";
                        },
                        { include = "#entities"; },
                        { include = "source.js"; },
                    );
                },
                {   name = "meta.tag.inline.script.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-xml:space"; },
                        { include = "#attribute-defer"; },
                        { include = "#attribute-src"; },
                        { include = "#attribute-type"; },
                        { include = "#attribute-charset"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-select" = {
            begin = "(<(select)\\b)";
            end = "((select)>)";
            captures = {
                1 = { name = "meta.tag.block.select.html.strict"; };
                2 = { name = "entity.name.tag.block.select.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=select))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.select.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-optgroup"; },
                        { include = "#tag-option"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.select.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-disabled"; },
                        { include = "#attribute-multiple"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attribute-onchange"; },
                        { include = "#attribute-size"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-small" = {
            begin = "(<(small)\\b)";
            end = "((small)>)";
            captures = {
                1 = { name = "meta.tag.block.small.html.strict"; };
                2 = { name = "entity.name.tag.block.small.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=small))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.small.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.small.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-span" = {
            begin = "(<(span)\\b)";
            end = "((span)>)";
            captures = {
                1 = { name = "meta.tag.block.span.html.strict"; };
                2 = { name = "entity.name.tag.block.span.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=span))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.span.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.span.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-strong" = {
            begin = "(<(strong)\\b)";
            end = "((strong)>)";
            captures = {
                1 = { name = "meta.tag.block.strong.html.strict"; };
                2 = { name = "entity.name.tag.block.strong.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=strong))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.strong.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.strong.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-style" = {
            comment = "Bug: Invalid chars are sometimes picked up by the js syntax first.";
            begin = "(<(style)\\b)";
            end = "((style)>)";
            captures = {
                1 = { name = "meta.tag.inline.style.html.strict"; };
                2 = { name = "entity.name.tag.inline.style.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=style))";
                    endCaptures = {
                        1 = { name = "meta.tag.inline.style.html.strict"; };
                    };
                    contentName = "source.css.embedded.html.strict";
                    patterns = (
                        { include = "#sgml-comment"; },
                        {   name = "meta.scope.xml-cdata.html";
                            begin = "<!\\[CDATA\\["; 
                            end = "]]>"; 
                            patterns = (
                                { include = "source.css"; },
                            );
                        },
                        {   name = "invalid.illegal.char_not_allowed";
                            match = "<|>|]]>|--";
                        },
                        { include = "#entities"; },
                        { include = "source.css"; },
                    );
                },
                {   name = "meta.tag.inline.style.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-xml:space"; },
                        { include = "#attribute-title"; },
                        { include = "#attribute-media"; },
                        { include = "#attribute-type"; },
                        { include = "#attributes-group-I18n"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-sub" = {
            begin = "(<(sub)\\b)";
            end = "((sub)>)";
            captures = {
                1 = { name = "meta.tag.block.sub.html.strict"; };
                2 = { name = "entity.name.tag.block.sub.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=sub))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.sub.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.sub.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-sup" = {
            begin = "(<(sup)\\b)";
            end = "((sup)>)";
            captures = {
                1 = { name = "meta.tag.block.sup.html.strict"; };
                2 = { name = "entity.name.tag.block.sup.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=sup))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.sup.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.sup.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-table" = {
            begin = "(<(table)\\b)";
            end = "((table)>)";
            captures = {
                1 = { name = "meta.tag.block.table.html.strict"; };
                2 = { name = "entity.name.tag.block.table.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=table))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.table.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-caption"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                        {   begin = "(?<=</caption>)";
                            end = "(?=<(?!/?caption))";
                            patterns = (
                                { include = "#stray-char"; },
                                { include = "#sgml-declarations"; },
                            );
                        },
                        {   begin = "(?=<(?!/?table))";
                            end = "(?=</table)";
                            patterns = (
                                {   comment = "Bug: This should use the generic invalid tag.";
                                    begin = "(?=<(colgroup|col))";
                                    end = "(?=<)";
                                    patterns = (
                                        {   begin = "(?=<colgroup)";
                                            end = "(?=<(?!colgroup|col))";
                                            patterns = (
                                                { include = "#tag-colgroup"; },
                                                { include = "#stray-char"; },
                                                { include = "#sgml-declarations"; },
                                            );
                                        },
                                        {   begin = "(?=<col)";
                                            end = "(?=<(?!colgroup|col))";
                                            patterns = (
                                                { include = "#tag-col"; },
                                                { include = "#stray-char"; },
                                                { include = "#sgml-declarations"; },
                                            );
                                        },
                                    );
                                },
                                {   
                                    begin = "(?=<(?!/?table))";
                                    end = "(?=</table)";
                                    patterns = (
                                        { include = "#tag-thead"; },
                                        {   begin = "(?<=</thead>)";
                                            end = "(?=</table)";
                                            patterns = (
                                                { include = "#tag-tfoot"; },
                                                {   begin = "(?<=</tfoot>)";
                                                    end = "(?=</table)";
                                                    patterns = (
                                                        { include = "#tag-tbody"; },
                                                        { include = "#stray-char"; },
                                                        { include = "#sgml-declarations"; },
                                                    );
                                                },
                                                {   
                                                    begin = "(?=<(?!/?table))";
                                                    end = "(?=</table)";
                                                    patterns = (
                                                        { include = "#tag-tbody"; },
                                                        { include = "#stray-char"; },
                                                        { include = "#sgml-declarations"; },
                                                    );
                                                },
                                                { include = "#stray-char"; },
                                                { include = "#sgml-declarations"; },
                                            );
                                        },
                                        {   
                                            begin = "(?=<(?!/?table))";
                                            end = "(?=</table)";
                                            patterns = (
                                                { include = "#tag-tfoot"; },
                                                {   begin = "(?<=</tfoot>)";
                                                    end = "(?=</table)";
                                                    patterns = (
                                                        { include = "#tag-tbody"; },
                                                        { include = "#stray-char"; },
                                                        { include = "#sgml-declarations"; },
                                                    );
                                                },
                                                {   
                                                    begin = "(?=<(?!/?table))";
                                                    end = "(?=</table)";
                                                    patterns = (
                                                        {   begin = "(?=<tbody)";
                                                            end = "(?=</table)";
                                                            patterns = (
                                                                { include = "#tag-tbody"; },
                                                                { include = "#stray-char"; },
                                                                { include = "#sgml-declarations"; },
                                                            );
                                                        },
                                                        {   
                                                            begin = "(?=<tr)";
                                                            end = "(?=</table)";
                                                            patterns = (
                                                                { include = "#tag-tr"; },
                                                                { include = "#stray-char"; },
                                                                { include = "#sgml-declarations"; },
                                                            );
                                                        },
                                                        { include = "#stray-char"; },
                                                        { include = "#sgml-declarations"; },
                                                    );
                                                },
                                                { include = "#stray-char"; },
                                                { include = "#sgml-declarations"; },
                                            );
                                        },
                                        { include = "#stray-char"; },
                                        { include = "#sgml-declarations"; },
                                    );
                                },
                                { include = "#stray-char"; },
                                { include = "#sgml-declarations"; },
                            );
                        },
                    );
                },
                {   name = "meta.tag.block.table.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-border"; },
                        { include = "#attribute-cellpadding"; },
                        { include = "#attribute-cellspacing"; },
                        { include = "#attribute-datapagesize"; },
                        { include = "#attribute-frame"; },
                        { include = "#attribute-rules"; },
                        { include = "#attribute-summary"; },
                        { include = "#attribute-width"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-tbody" = {
            begin = "(<(tbody)\\b)";
            end = "((tbody)>)";
            captures = {
                1 = { name = "meta.tag.block.tbody.html.strict"; };
                2 = { name = "entity.name.tag.block.tbody.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=tbody))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.tbody.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-tr"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.tbody.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-align"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-valign"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-td" = {
            begin = "(<(td)\\b)";
            end = "((/>)|((td)>))";
            captures = {
                1 = { name = "meta.tag.block.td.html.strict"; };
                4 = { name = "entity.name.tag.block.td.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=td))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.td.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.td.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-abbr"; },
                        { include = "#attribute-align"; },
                        { include = "#attribute-axis"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-colspan"; },
                        { include = "#attribute-headers"; },
                        { include = "#attribute-rowspan"; },
                        { include = "#attribute-scope"; },
                        { include = "#attribute-valign"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-textarea" = {
            begin = "(<(textarea)\\b)";
            end = "((/>)|((textarea)>))";
            captures = {
                1 = { name = "meta.tag.block.textarea.html.strict"; };
                4 = { name = "entity.name.tag.block.textarea.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=option))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.textarea.html.strict"; };
                    };
                    patterns = (
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.textarea.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-accesskey"; },
                        { include = "#attribute-cols"; },
                        { include = "#attribute-disabled"; },
                        { include = "#attribute-name"; },
                        { include = "#attribute-onblur"; },
                        { include = "#attribute-onfocus"; },
                        { include = "#attribute-onchange"; },
                        { include = "#attribute-onselect"; },
                        { include = "#attribute-readonly"; },
                        { include = "#attribute-rows"; },
                        { include = "#attribute-tabindex"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-tfoot" = {
            begin = "(<(tfoot)\\b)";
            end = "((tfoot)>)";
            captures = {
                1 = { name = "meta.tag.block.tfoot.html.strict"; };
                2 = { name = "entity.name.tag.block.tfoot.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=tfoot))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.tfoot.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-tr"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.tfoot.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-align"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-valign"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-th" = {
            begin = "(<(th)\\b)";
            end = "((/>)|((th)>))";
            captures = {
                1 = { name = "meta.tag.block.th.html.strict"; };
                4 = { name = "entity.name.tag.block.th.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=[^/]>)";
                    end = "(</(?=th))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.th.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-flow"; },
                        { include = "#entities"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.th.html.strict";
                    begin = "";
                    end = "((?=/>)|>)";
                    patterns = (
                        { include = "#attribute-abbr"; },
                        { include = "#attribute-align"; },
                        { include = "#attribute-axis"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-colspan"; },
                        { include = "#attribute-headers"; },
                        { include = "#attribute-rowspan"; },
                        { include = "#attribute-scope"; },
                        { include = "#attribute-valign"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-thead" = {
            begin = "(<(thead)\\b)";
            end = "((thead)>)";
            captures = {
                1 = { name = "meta.tag.block.thead.html.strict"; };
                2 = { name = "entity.name.tag.block.thead.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=thead))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.thead.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-tr"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.thead.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-align"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-valign"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-title" = {
            begin = "(<(title)\\b)";
            end = "((title)>)";
            captures = {
                1 = { name = "meta.tag.inline.title.html.strict"; };
                2 = { name = "entity.name.tag.inline.title.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=title))";
                    endCaptures = {
                        1 = { name = "meta.tag.inline.title.html.strict"; };
                    };
                    patterns = (
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.inline.title.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-profile"; },
                        { include = "#attributes-group-I18n"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-tr" = {
            begin = "(<(tr)\\b)";
            end = "((tr)>)";
            captures = {
                1 = { name = "meta.tag.block.tr.html.strict"; };
                2 = { name = "entity.name.tag.block.tr.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=tr))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.tr.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-td"; },
                        { include = "#tag-th"; },
                        { include = "#stray-char"; },
                        { include = "#sgml-declarations"; },
                    );
                },
                {   name = "meta.tag.block.tr.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attribute-align"; },
                        { include = "#attribute-char"; },
                        { include = "#attribute-charoff"; },
                        { include = "#attribute-valign"; },
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-tt" = {
            begin = "(<(tt)\\b)";
            end = "((tt)>)";
            captures = {
                1 = { name = "meta.tag.block.tt.html.strict"; };
                2 = { name = "entity.name.tag.block.tt.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=tt))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.tt.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.tt.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-ul" = {
            begin = "(<(ul)\\b)";
            end = "((ul)>)";
            captures = {
                1 = { name = "meta.tag.block.ul.html.strict"; };
                2 = { name = "entity.name.tag.block.ul.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=ul))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.ul.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-li"; },
                        { include = "#sgml-declarations"; },
                        { include = "#stray-char"; },
                    );
                },
                {   name = "meta.tag.block.ul.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "tag-var" = {
            begin = "(<(var)\\b)";
            end = "((var)>)";
            captures = {
                1 = { name = "meta.tag.block.var.html.strict"; };
                2 = { name = "entity.name.tag.block.var.html.strict"; };
            };
            patterns = (
                {
                    begin = "(?<=>)";
                    end = "(</(?=var))";
                    endCaptures = {
                        1 = { name = "meta.tag.block.var.html.strict"; };
                    };
                    patterns = (
                        { include = "#tag-group-inline"; },
                        { include = "#sgml-declarations"; },
                        { include = "#entities"; },
                    );
                },
                {   name = "meta.tag.block.var.html.strict";
                    begin = "";
                    end = ">";
                    patterns = (
                        { include = "#attributes-group-common"; },
                        { include = "#attribute-xmlns"; },
                        { include = "#attributes-illegal_char"; },
                    );
                },
            );
        }; 
        "entities" = {
            patterns = (
                {   name = "constant.character.html.strict";
                    match = "&([a-zA-Z]+|#[0-9]+|#x[0-9a-fA-F]+);";
                },
                {   name = "invalid.illegal.stray-ampersand.html.strict";
                    match = "&(?!([a-zA-Z]+|#[0-9]+|#x[0-9a-fA-F]+);)";
                },
            );
        }; 
        "stray-char" = {
            tooltip = "Characters not allowed here, try adding a block level tag first.";
            match = "[^<>\\s][^<>]*";
            name = "invalid.illegal.character_data_not_allowed_here";
        }; 
        "values-generic-valid" = {
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { include = "#entities"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { include = "#entities"; },
                    ); 
                },
            ); 
        }; 
        "values-generic-invalid" = {
            patterns = (
                {   name = "invalid.illegal.incorrect-value.html";
                    match = "(?<=\"|').*?(?=\"|')";
                },
            );
        }; 
        "attribute-xmlns" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(xmlns)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')http://www.w3.org/1999/xhtml(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')http://www.w3.org/1999/xhtml(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-xml:space" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(xml:space)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')preserve(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')preserve(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-accept" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(accept)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-accept-charset" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(accept-charset)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-accesskey" = {
            name = "meta.attribute-with-value.html.strict";
            comment = "Bug: Does not correctly represent the single Character attribute.";
            begin = "(accesskey)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[[:alnum:]](?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[[:alnum:]](?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-action" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(action)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-abbr" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(abbr)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-align" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(align)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(left|center|right|justify|char)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(left|center|right|justify|char)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-alt" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(alt)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-axis" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(axis)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-border" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(border)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-char" = {
            name = "meta.attribute-with-value.html.strict";
            comment = "Bug: Does not correctly represent the single Character attribute.";
            begin = "(char)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[[:alnum:]](?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[[:alnum:]](?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-charoff" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(charoff)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-charset" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(charset)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-checked" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(checked)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')checked(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')checked(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-cellpadding" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(cellpadding)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-cellspacing" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(cellpadding)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-cite" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(cite)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-class" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(class)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-classid" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(classid)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-codebase" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(codebase)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-codetype" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(codetype)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-cols" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(cols)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-colspan" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(colspan)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-content" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(content)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-coords" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(coords)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-data" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(data)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-datapagesize" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(datapagesize)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-datetime" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(datetime)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{4}-(0[1-9]|1[012])-((?!00|3[2-9])[0-3][0-9])T((?!2[4-9])[0-2][0-9]):[0-5][0-9]:[0-5][0-9](Z|[-+]((?!2[4-9])[0-2][0-9]):[0-5][0-9]))(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{4}-(0[1-9]|1[012])-((?!00|3[2-9])[0-3][0-9])T((?!2[4-9])[0-2][0-9]):[0-5][0-9]:[0-5][0-9](Z|[-+]((?!2[4-9])[0-2][0-9]):[0-5][0-9]))(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-declare" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(declare)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')declare(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')declare(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-defer" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(defer)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')defer(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')defer(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-disabled" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(disabled)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')disabled(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')disabled(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-enctype" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(enctype)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-for" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(for)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-frame" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(frame)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(void|above|below|hsides|lhs|rhs|vsides|box|border)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(void|above|below|hsides|lhs|rhs|vsides|box|border)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-frameborder" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(frameborder)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[01](?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[01](?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-height" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(height)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-href" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(href)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-hreflang" = {
            name = "meta.attribute-with-value.html.strict";
            comment = "Bug: This may not take into account all possible characters in NMTOKEN.";
            begin = "(hreflang)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        {   match = "[\\w\\-:]+"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        {   match = "[\\w\\-:]+"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-http-equiv" = {
            name = "meta.attribute-with-value.html.strict";
            comment = "Bug: This may not take into account all possible characters in NMTOKEN.";
            begin = "(http-equiv)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        {   match = "[\\w\\-:]+"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        {   match = "[\\w\\-:]+"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-id" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(id)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[a-zA-Z][a-zA-Z0-9\\-_:.]*(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[a-zA-Z][a-zA-Z0-9\\-_:.]*(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-ismap" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(ismap)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')ismap(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')ismap(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-label" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(label)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-longdesc" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(longdesc)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-marginheight" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(marginheight)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-marginwidth" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(marginwidth)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-maxlength" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(maxlength)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-media" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(media)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(screen|tty|tv|projection|handheld|print|braille|aural|all)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(screen|tty|tv|projection|handheld|print|braille|aural|all)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-method" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(method)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(get|post)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(get|post)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-multiple" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(multiple)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')multiple(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')multiple(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-name" = {
            name = "meta.attribute-with-value.html.strict";
            comment = "Bug: This may not take into account all possible characters in NMTOKEN.";
            begin = "(name)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        {   match = "[\\w\\-:.]+"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        {   match = "[\\w\\-:.]+"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-nohref" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(nohref)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')nohref(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')nohref(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-onblur" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onblur)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onchange" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onchange)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onfocus" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onfocus)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onload" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onload)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onreset" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onreset)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onselect" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onselect)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onsubmit" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onsubmit)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-onunload" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onunload)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attribute-profile" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(profile)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-readonly" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(readonly)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')readonly(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')readonly(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-rev" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(rev)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-rel" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(rel)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-rows" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(rows)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-rowspan" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(rowspan)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-rules" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(rules)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(none|groups|rows|cols|all)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(none|groups|rows|cols|all)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-scheme" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(scheme)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-scope" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(scope)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(row|col|rowgroup|colgroup)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(row|col|rowgroup|colgroup)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-scrolling" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(scrolling)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(yes|no|auto)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(yes|no|auto)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-selected" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(selected)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')selected(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')selected(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-shape" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(shape)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(rect|circle|poly|default)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(rect|circle|poly|default)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-size" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(size)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-span" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(span)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-src" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(src)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-standby" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(standby)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-style" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(style)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    contentName = "source.css.embedded.html.strict";
                    patterns = (
                        { include = "source.css"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    contentName = "source.css.embedded.html.strict";
                    patterns = (
                        { include = "source.css"; },
                    ); 
                },
            ); 
        }; 
        "attribute-summary" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(summary)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-tabindex" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(tabindex)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')[0-9]+(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-target" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(target)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-title" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(title)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-type" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(type)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-type-button" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(type)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(button|submit|reset)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(button|submit|reset)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-type-input" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(type)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(text|password|checkbox|button|radio|submit|reset|file|hidden|image)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(text|password|checkbox|button|radio|submit|reset|file|hidden|image)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-valign" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(valign)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(top|middle|bottom|baseline)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(top|middle|bottom|baseline)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-value" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(value)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                { include = "#values-generic-valid"; },
            ); 
        }; 
        "attribute-valuetype" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(valuetype)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')(data|ref|object)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')(data|ref|object)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-width" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(width)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attribute-width-multi" = {
            name = "meta.attribute-with-value.html.strict";
            begin = "(width)=(?=([\"']).*?[\"'])";
            end = "";
            beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
            patterns = (
                {   name = "string.quoted.double";
                    begin = "\"";
                    end = "\"";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}\\*?|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
                {   name = "string.quoted.single";
                    begin = "'";
                    end = "'";
                    patterns = (
                        { match = "(?<=\"|')([0-9]{0,5}\\*?|[0-9]{0,4}%)(?=\"|')"; },
                        { include = "#values-generic-invalid"; },
                    ); 
                },
            ); 
        }; 
        "attributes-illegal_char" = {
            name = "invalid.illegal";
            match = "/(?!>)|[^\\s/>]";
        }; 
        "attributes-group-core" = {
            patterns = (
                { include = "#attribute-class"; },
                { include = "#attribute-id"; },
                { include = "#attribute-title"; },
            );
        }; 
        "attributes-group-style" = {
            patterns = (
                { include = "#attribute-style"; },
            );
        }; 
        "attributes-group-events" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(onclick|ondblclick|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            contentName = "source.js.embedded.html.strict";
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            contentName = "source.js.embedded.html.strict";
                        },
                    ); 
                },
            );
        }; 
        "attributes-group-I18n" = {
            patterns = (
                {   name = "meta.attribute-with-value.html.strict";
                    begin = "(dir)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            patterns = (
                                { match = "(?<=\"|')(ltr|rtl)(?=\"|')"; },
                                { include = "#values-generic-invalid"; },
                            ); 
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            patterns = (
                                { match = "(?<=\"|')(ltr|rtl)(?=\"|')"; },
                                { include = "#values-generic-invalid"; },
                            ); 
                        },
                    ); 
                },
                {   name = "meta.attribute-with-value.html.strict";
                    comment = "Bug: This may not take into account all possible characters in NMTOKEN.";
                    begin = "(xml:lang)=(?=([\"']).*?[\"'])";
                    end = "";
                    beginCaptures = { 1 = { name = "entity.other.attribute-name.html"; }; };
                    patterns = (
                        {   name = "string.quoted.double";
                            begin = "\"";
                            end = "\"";
                            patterns = (
                                {   match = "[\\w\\-:]+"; },
                                { include = "#values-generic-invalid"; },
                            ); 
                        },
                        {   name = "string.quoted.single";
                            begin = "'";
                            end = "'";
                            patterns = (
                                {   match = "[\\w\\-:]+"; },
                                { include = "#values-generic-invalid"; },
                            ); 
                        },
                    ); 
                },
            ); 
        }; 
        "attributes-group-common" = {
            patterns = (
                { include = "#attributes-group-core"; },
                { include = "#attributes-group-events"; },
                { include = "#attributes-group-I18n"; },
                { include = "#attributes-group-style"; },
            );
        }; 
        "tag-group-heading" = {
            patterns = (
                { include = "#tag-h1"; },
                { include = "#tag-h2"; },
                { include = "#tag-h3"; },
                { include = "#tag-h4"; },
                { include = "#tag-h5"; },
                { include = "#tag-h6"; },
            );
        }; 
        "tag-group-block" = {
            patterns = (
                { include = "#tag-form"; },
                { include = "#tag-hr"; },
                { include = "#tag-script"; },
                { include = "#tag-noscript"; },
                { include = "#tag-address"; },
                { include = "#tag-blockquote"; },
                { include = "#tag-div"; },
                { include = "#tag-pre"; },
                { include = "#tag-p"; },
                { include = "#tag-table"; },
                { include = "#tag-group-form"; },
            );
        }; 
        "tag-group-block-no_form" = {
            patterns = (
                { include = "#tag-hr"; },
                { include = "#tag-script"; },
                { include = "#tag-noscript"; },
                { include = "#tag-address"; },
                { include = "#tag-blockquote"; },
                { include = "#tag-div"; },
                { include = "#tag-pre"; },
                { include = "#tag-p"; },
                { include = "#tag-table"; },
                { include = "#tag-group-form"; },
            );
        }; 
        "tag-group-list" = {
            patterns = (
                { include = "#tag-dl"; },
                { include = "#tag-ol"; },
                { include = "#tag-ul"; },
            );
        }; 
        "tag-group-inline" = {
            patterns = (
                { include = "#tag-a"; },
                { include = "#tag-abbr"; },
                { include = "#tag-acronym"; },
                { include = "#tag-b"; },
                { include = "#tag-bdo"; },
                { include = "#tag-big"; },
                { include = "#tag-br"; },
                { include = "#tag-cite"; },
                { include = "#tag-code"; },
                { include = "#tag-del"; },
                { include = "#tag-dfn"; },
                { include = "#tag-em"; },
                { include = "#tag-i"; },
                { include = "#tag-iframe"; },
                { include = "#tag-img"; },
                { include = "#tag-ins"; },
                { include = "#tag-kbd"; },
                { include = "#tag-map"; },
                { include = "#tag-noscript"; },
                { include = "#tag-q"; },
                { include = "#tag-ruby"; },
                { include = "#tag-samp"; },
                { include = "#tag-script"; },
                { include = "#tag-span"; },
                { include = "#tag-small"; },
                { include = "#tag-strong"; },
                { include = "#tag-sub"; },
                { include = "#tag-sup"; },
                { include = "#tag-tt"; },
                { include = "#tag-var"; },
                { include = "#tag-group-formctrl"; },
            );
        }; 
        "tag-group-inline-no_label" = {
            patterns = (
                { include = "#tag-a"; },
                { include = "#tag-abbr"; },
                { include = "#tag-acronym"; },
                { include = "#tag-b"; },
                { include = "#tag-bdo"; },
                { include = "#tag-big"; },
                { include = "#tag-br"; },
                { include = "#tag-cite"; },
                { include = "#tag-code"; },
                { include = "#tag-del"; },
                { include = "#tag-dfn"; },
                { include = "#tag-em"; },
                { include = "#tag-i"; },
                { include = "#tag-iframe"; },
                { include = "#tag-img"; },
                { include = "#tag-ins"; },
                { include = "#tag-kbd"; },
                { include = "#tag-map"; },
                { include = "#tag-noscript"; },
                { include = "#tag-q"; },
                { include = "#tag-ruby"; },
                { include = "#tag-samp"; },
                { include = "#tag-script"; },
                { include = "#tag-span"; },
                { include = "#tag-small"; },
                { include = "#tag-strong"; },
                { include = "#tag-sub"; },
                { include = "#tag-sup"; },
                { include = "#tag-tt"; },
                { include = "#tag-var"; },
                { include = "#tag-input"; },
                { include = "#tag-select"; },
                { include = "#tag-textarea"; },
                { include = "#tag-button"; },
            );
        }; 
        "tag-group-inline-no_formctrl" = {
            patterns = (
                { include = "#tag-a"; },
                { include = "#tag-abbr"; },
                { include = "#tag-acronym"; },
                { include = "#tag-b"; },
                { include = "#tag-bdo"; },
                { include = "#tag-big"; },
                { include = "#tag-br"; },
                { include = "#tag-cite"; },
                { include = "#tag-code"; },
                { include = "#tag-del"; },
                { include = "#tag-dfn"; },
                { include = "#tag-em"; },
                { include = "#tag-i"; },
                { include = "#tag-iframe"; },
                { include = "#tag-img"; },
                { include = "#tag-ins"; },
                { include = "#tag-kbd"; },
                { include = "#tag-map"; },
                { include = "#tag-noscript"; },
                { include = "#tag-q"; },
                { include = "#tag-ruby"; },
                { include = "#tag-samp"; },
                { include = "#tag-script"; },
                { include = "#tag-span"; },
                { include = "#tag-small"; },
                { include = "#tag-strong"; },
                { include = "#tag-sub"; },
                { include = "#tag-sup"; },
                { include = "#tag-tt"; },
                { include = "#tag-var"; },
            );
        }; 
        "tag-group-inline-no_ruby" = {
            patterns = (
                { include = "#tag-a"; },
                { include = "#tag-abbr"; },
                { include = "#tag-acronym"; },
                { include = "#tag-b"; },
                { include = "#tag-bdo"; },
                { include = "#tag-big"; },
                { include = "#tag-br"; },
                { include = "#tag-cite"; },
                { include = "#tag-code"; },
                { include = "#tag-del"; },
                { include = "#tag-dfn"; },
                { include = "#tag-em"; },
                { include = "#tag-i"; },
                { include = "#tag-iframe"; },
                { include = "#tag-img"; },
                { include = "#tag-ins"; },
                { include = "#tag-kbd"; },
                { include = "#tag-map"; },
                { include = "#tag-noscript"; },
                { include = "#tag-q"; },
                { include = "#tag-samp"; },
                { include = "#tag-script"; },
                { include = "#tag-span"; },
                { include = "#tag-small"; },
                { include = "#tag-strong"; },
                { include = "#tag-sub"; },
                { include = "#tag-sup"; },
                { include = "#tag-tt"; },
                { include = "#tag-var"; },
                { include = "#tag-group-formctrl"; },
            );
        }; 
        "tag-group-inline-no_a" = {
            patterns = (
                { include = "#tag-abbr"; },
                { include = "#tag-acronym"; },
                { include = "#tag-b"; },
                { include = "#tag-bdo"; },
                { include = "#tag-big"; },
                { include = "#tag-br"; },
                { include = "#tag-cite"; },
                { include = "#tag-code"; },
                { include = "#tag-del"; },
                { include = "#tag-dfn"; },
                { include = "#tag-em"; },
                { include = "#tag-i"; },
                { include = "#tag-iframe"; },
                { include = "#tag-img"; },
                { include = "#tag-ins"; },
                { include = "#tag-kbd"; },
                { include = "#tag-map"; },
                { include = "#tag-noscript"; },
                { include = "#tag-q"; },
                { include = "#tag-samp"; },
                { include = "#tag-script"; },
                { include = "#tag-span"; },
                { include = "#tag-small"; },
                { include = "#tag-strong"; },
                { include = "#tag-sub"; },
                { include = "#tag-sup"; },
                { include = "#tag-tt"; },
                { include = "#tag-var"; },
                { include = "#tag-group-formctrl"; },
            );
        }; 
        "tag-group-form" = {
            patterns = (
                { include = "#tag-form"; },
                { include = "#tag-fieldset"; },
            );
        }; 
        "tag-group-formctrl" = {
            patterns = (
                { include = "#tag-input"; },
                { include = "#tag-select"; },
                { include = "#tag-textarea"; },
                { include = "#tag-label"; },
                { include = "#tag-button"; },
            );
        }; 
        "tag-group-flow" = {
            patterns = (
                { include = "#tag-group-heading"; },
                { include = "#tag-group-block"; },
                { include = "#tag-group-inline"; },
                { include = "#tag-group-list"; },
            );
        }; 
    }; 
    uuid = "252A7F3A-5B98-4148-B079-6E0CB348E5A0"; 
}
